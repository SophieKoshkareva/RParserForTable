def = function(theObject, table, column_index, row_header, row_table_legend)
{
standardGeneric("FindOutliers")
}
)
setMethod(f = "FindOutliers",
signature = "Outlier",
definition = function(theObject, table, column_index, row_header, row_table_legend)
{
outliers_row_ind <- c()
only_digits <- c()
outliers <- c()
c <- table[[column_index]]
for (i in 1:length(c))
{
if (is.na(c[i]) == TRUE)
{
outliers_row_ind <- i + row_header + row_table_legend
missingValue@indices <<- append(missingValue@indices, values = paste(outliers_row_ind, column_index, sep = "."))
PrintReport(missingValue, file@path_report, outliers_row_ind, column_index)
cat("Missing value coordinates are ", paste(i, column_index, sep = "."), "\n")
next
}
if (grepl("\\d", c[i]) == TRUE)
{
only_digits <- append(only_digits, c[i])
next
}
}
only_digits <- gsub(',|, ', '.', only_digits)
outliers <- boxplot.stats(as.numeric(only_digits))$out
if (!is.null(outliers))
{
#xlsx.createBook(table, sheet_out_name, file_out)
outliers_row_ind <- which(c %in% outliers, arr.ind = T, useNames = F)
tmp <- gsub("[.]", "\\1. ", outliers)
print(which(c %in% tmp, arr.ind = T, useNames = F))
outliers_row_ind <- outliers_row_ind + row_header + row_table_legend
outlier@indices <<- append(outlier@indices, values = outer(outliers_row_ind, column_index, paste, sep = "."))
lapply(outliers_row_ind, function(i) PrintReport(theObject, file@path_report, i, column_index))
cat("Outlier coordinates are ", paste(outliers_row_ind, column_index, sep = "."), "\n")
}
}
)
#install.packages("xlsx")
require(xlsx)
source("D:/Diploma/r_project/File.R")
file <- new("File")
file <- Open(file)
# globalMissing <- character()
# globalMisprint <- character()
# globalOutlier <- character()
# globalUnsolvedMisprint <- character()
source("D:/Diploma/r_project/Error.R")
source("D:/Diploma/r_project/MissingValue.R")
missingValue <- new("MissingValue")
source("D:/Diploma/r_project/Misprint.R")
misprint <- new("Misprint")
source("D:/Diploma/r_project/UnsolvedMisprint.R")
unsolvedMisprint <- new("UnsolvedMisprint")
source("D:/Diploma/r_project/Outlier.R")
outlier <- new("Outlier")
source("D:/Diploma/r_project/Column.R")
source("D:/Diploma/r_project/Sex.R")
sex <- new("Sex")
FindErrors(sex)
source("D:/Diploma/r_project/Age.R")
age <- new("Age")
FindErrors(age)
source("D:/Diploma/r_project/Weight.R")
weight <- new("Weight")
FindErrors(weight)
source("D:/Diploma/r_project/Diabetes.R")
diabetes <- new("Diabetes")
FindErrors(diabetes)
source("D:/Diploma/r_project/Euroscore.R")
euroscore <- new("Euroscore")
FindErrors(euroscore)
source("D:/Diploma/r_project/StsScore.R")
stsScore <- new("StsScore")
FindErrors(stsScore)
source("D:/Diploma/r_project/PeakPressureGradient.R")
peakPressureGradient <- new("PeakPressureGradient")
FindErrors(peakPressureGradient)
source("D:/Diploma/r_project/AveragePressureGradient.R")
averagePressureGradient <- new("AveragePressureGradient")
FindErrors(averagePressureGradient)
source("D:/Diploma/r_project/AorticValveStenosis.R")
aorticValveStenosis <- new("AorticValveStenosis")
FindErrors(aorticValveStenosis)
#other columns
file <- CreateExcelWB(file)
#missingValue@indices <- globalMissing
SetColor(missingValue, file)
#misprint@indices <- globalMisprint
SetColor(misprint, file)
#unsolvedMisprint@indices <- globalUnsolvedMisprint
SetColor(unsolvedMisprint, file)
#outlier@indices <- globalOutlier
SetColor(outlier, file)
file <- SaveExcelWB(file)
Outlier <- setClass("Outlier",
contains = "Error"
)
setMethod(f = "initialize",
signature = "Outlier",
definition = function(.Object)
{
.Object@title <- c("Выбросы")
.Object@col_index_legend <- 4
.Object@style <- c("outlier")
return(.Object)
}
)
setGeneric(name = "FindOutliers",
def = function(theObject, table, column_index, row_header, row_table_legend)
{
standardGeneric("FindOutliers")
}
)
setMethod(f = "FindOutliers",
signature = "Outlier",
definition = function(theObject, table, column_index, row_header, row_table_legend)
{
outliers_row_ind <- c()
only_digits <- c()
outliers <- c()
c <- table[[column_index]]
for (i in 1:length(c))
{
if (is.na(c[i]) == TRUE)
{
outliers_row_ind <- i + row_header + row_table_legend
missingValue@indices <<- append(missingValue@indices, values = paste(outliers_row_ind, column_index, sep = "."))
PrintReport(missingValue, file@path_report, outliers_row_ind, column_index)
cat("Missing value coordinates are ", paste(i, column_index, sep = "."), "\n")
next
}
if (grepl("\\d", c[i]) == TRUE)
{
only_digits <- append(only_digits, c[i])
next
}
}
only_digits <- gsub(',|, ', '.', only_digits)
outliers <- boxplot.stats(as.numeric(only_digits))$out
if (!is.null(outliers))
{
#xlsx.createBook(table, sheet_out_name, file_out)
outliers_row_ind <- which(c %in% outliers, arr.ind = T, useNames = F)
tmp <- gsub("[.]", "\\1. ", outliers)
print(tmp)
print(which(c %in% tmp, arr.ind = T, useNames = F))
outliers_row_ind <- outliers_row_ind + row_header + row_table_legend
outlier@indices <<- append(outlier@indices, values = outer(outliers_row_ind, column_index, paste, sep = "."))
lapply(outliers_row_ind, function(i) PrintReport(theObject, file@path_report, i, column_index))
cat("Outlier coordinates are ", paste(outliers_row_ind, column_index, sep = "."), "\n")
}
}
)
#install.packages("xlsx")
require(xlsx)
source("D:/Diploma/r_project/File.R")
file <- new("File")
file <- Open(file)
# globalMissing <- character()
# globalMisprint <- character()
# globalOutlier <- character()
# globalUnsolvedMisprint <- character()
source("D:/Diploma/r_project/Error.R")
source("D:/Diploma/r_project/MissingValue.R")
missingValue <- new("MissingValue")
source("D:/Diploma/r_project/Misprint.R")
misprint <- new("Misprint")
source("D:/Diploma/r_project/UnsolvedMisprint.R")
unsolvedMisprint <- new("UnsolvedMisprint")
source("D:/Diploma/r_project/Outlier.R")
outlier <- new("Outlier")
source("D:/Diploma/r_project/Column.R")
source("D:/Diploma/r_project/Sex.R")
sex <- new("Sex")
FindErrors(sex)
source("D:/Diploma/r_project/Age.R")
age <- new("Age")
FindErrors(age)
source("D:/Diploma/r_project/Weight.R")
weight <- new("Weight")
FindErrors(weight)
source("D:/Diploma/r_project/Diabetes.R")
diabetes <- new("Diabetes")
FindErrors(diabetes)
source("D:/Diploma/r_project/Euroscore.R")
euroscore <- new("Euroscore")
FindErrors(euroscore)
source("D:/Diploma/r_project/StsScore.R")
stsScore <- new("StsScore")
FindErrors(stsScore)
source("D:/Diploma/r_project/PeakPressureGradient.R")
peakPressureGradient <- new("PeakPressureGradient")
FindErrors(peakPressureGradient)
source("D:/Diploma/r_project/AveragePressureGradient.R")
averagePressureGradient <- new("AveragePressureGradient")
FindErrors(averagePressureGradient)
source("D:/Diploma/r_project/AorticValveStenosis.R")
aorticValveStenosis <- new("AorticValveStenosis")
FindErrors(aorticValveStenosis)
#other columns
file <- CreateExcelWB(file)
#missingValue@indices <- globalMissing
SetColor(missingValue, file)
#misprint@indices <- globalMisprint
SetColor(misprint, file)
#unsolvedMisprint@indices <- globalUnsolvedMisprint
SetColor(unsolvedMisprint, file)
#outlier@indices <- globalOutlier
SetColor(outlier, file)
file <- SaveExcelWB(file)
Outlier <- setClass("Outlier",
contains = "Error"
)
setMethod(f = "initialize",
signature = "Outlier",
definition = function(.Object)
{
.Object@title <- c("Выбросы")
.Object@col_index_legend <- 4
.Object@style <- c("outlier")
return(.Object)
}
)
setGeneric(name = "FindOutliers",
def = function(theObject, table, column_index, row_header, row_table_legend)
{
standardGeneric("FindOutliers")
}
)
setMethod(f = "FindOutliers",
signature = "Outlier",
definition = function(theObject, table, column_index, row_header, row_table_legend)
{
outliers_row_ind <- c()
only_digits <- c()
outliers <- c()
c <- table[[column_index]]
for (i in 1:length(c))
{
if (is.na(c[i]) == TRUE)
{
outliers_row_ind <- i + row_header + row_table_legend
missingValue@indices <<- append(missingValue@indices, values = paste(outliers_row_ind, column_index, sep = "."))
PrintReport(missingValue, file@path_report, outliers_row_ind, column_index)
cat("Missing value coordinates are ", paste(i, column_index, sep = "."), "\n")
next
}
if (grepl("\\d", c[i]) == TRUE)
{
only_digits <- append(only_digits, c[i])
next
}
}
only_digits <- gsub(',|, ', '.', only_digits)
outliers <- boxplot.stats(as.numeric(only_digits))$out
if (!is.null(outliers))
{
#xlsx.createBook(table, sheet_out_name, file_out)
outliers_row_ind <- which(c %in% outliers, arr.ind = T, useNames = F)
tmp <- gsub("[.]", "\\1, ", outliers)
print(tmp)
print(which(c %in% tmp, arr.ind = T, useNames = F))
outliers_row_ind <- outliers_row_ind + row_header + row_table_legend
outlier@indices <<- append(outlier@indices, values = outer(outliers_row_ind, column_index, paste, sep = "."))
lapply(outliers_row_ind, function(i) PrintReport(theObject, file@path_report, i, column_index))
cat("Outlier coordinates are ", paste(outliers_row_ind, column_index, sep = "."), "\n")
}
}
)
#install.packages("xlsx")
require(xlsx)
source("D:/Diploma/r_project/File.R")
file <- new("File")
file <- Open(file)
# globalMissing <- character()
# globalMisprint <- character()
# globalOutlier <- character()
# globalUnsolvedMisprint <- character()
source("D:/Diploma/r_project/Error.R")
source("D:/Diploma/r_project/MissingValue.R")
missingValue <- new("MissingValue")
source("D:/Diploma/r_project/Misprint.R")
misprint <- new("Misprint")
source("D:/Diploma/r_project/UnsolvedMisprint.R")
unsolvedMisprint <- new("UnsolvedMisprint")
source("D:/Diploma/r_project/Outlier.R")
outlier <- new("Outlier")
source("D:/Diploma/r_project/Column.R")
source("D:/Diploma/r_project/Sex.R")
sex <- new("Sex")
FindErrors(sex)
source("D:/Diploma/r_project/Age.R")
age <- new("Age")
FindErrors(age)
source("D:/Diploma/r_project/Weight.R")
weight <- new("Weight")
FindErrors(weight)
source("D:/Diploma/r_project/Diabetes.R")
diabetes <- new("Diabetes")
FindErrors(diabetes)
source("D:/Diploma/r_project/Euroscore.R")
euroscore <- new("Euroscore")
FindErrors(euroscore)
source("D:/Diploma/r_project/StsScore.R")
stsScore <- new("StsScore")
FindErrors(stsScore)
source("D:/Diploma/r_project/PeakPressureGradient.R")
peakPressureGradient <- new("PeakPressureGradient")
FindErrors(peakPressureGradient)
source("D:/Diploma/r_project/AveragePressureGradient.R")
averagePressureGradient <- new("AveragePressureGradient")
FindErrors(averagePressureGradient)
source("D:/Diploma/r_project/AorticValveStenosis.R")
aorticValveStenosis <- new("AorticValveStenosis")
FindErrors(aorticValveStenosis)
#other columns
file <- CreateExcelWB(file)
#missingValue@indices <- globalMissing
SetColor(missingValue, file)
#misprint@indices <- globalMisprint
SetColor(misprint, file)
#unsolvedMisprint@indices <- globalUnsolvedMisprint
SetColor(unsolvedMisprint, file)
#outlier@indices <- globalOutlier
SetColor(outlier, file)
file <- SaveExcelWB(file)
ann <- "8,3"
grepl("\\d", "a", ann)
Outlier <- setClass("Outlier",
contains = "Error"
)
setMethod(f = "initialize",
signature = "Outlier",
definition = function(.Object)
{
.Object@title <- c("???????")
.Object@col_index_legend <- 4
.Object@style <- c("outlier")
return(.Object)
}
)
setGeneric(name = "FindOutliers",
def = function(theObject, table, column_index, row_header, row_table_legend)
{
standardGeneric("FindOutliers")
}
)
setMethod(f = "FindOutliers",
signature = "Outlier",
definition = function(theObject, table, column_index, row_header, row_table_legend)
{
outliers_row_ind <- c()
only_digits <- c()
outliers <- c()
c <- table[[column_index]]
for (i in 1:length(c))
{
if (is.na(c[i]) == TRUE)
{
outliers_row_ind <- i + row_header + row_table_legend
missingValue@indices <<- append(missingValue@indices, values = paste(outliers_row_ind, column_index, sep = "."))
PrintReport(missingValue, file@path_report, outliers_row_ind, column_index)
cat("Missing value coordinates are ", paste(i, column_index, sep = "."), "\n")
next
}
if (grepl("\\d", c[i]) == TRUE)
{
only_digits <- append(only_digits, c[i])
next
}
}
only_digits <- gsub(',', '.', only_digits)
outliers <- boxplot.stats(as.numeric(only_digits))$out
if (!is.null(outliers))
{
#xlsx.createBook(table, sheet_out_name, file_out)
outliers_row_ind <- which(c %in% outliers, arr.ind = T, useNames = F)
outliers_row_ind <- outliers_row_ind + row_header + row_table_legend
outlier@indices <<- append(outlier@indices, values = outer(outliers_row_ind, column_index, paste, sep = "."))
lapply(outliers_row_ind, function(i) PrintReport(theObject, file@path_report, i, column_index))
cat("Outlier coordinates are ", paste(outliers_row_ind, column_index, sep = "."), "\n")
}
}
)
Outlier <- setClass("Outlier",
contains = "Error"
)
setMethod(f = "initialize",
signature = "Outlier",
definition = function(.Object)
{
.Object@title <- c("Выбросы")
.Object@col_index_legend <- 4
.Object@style <- c("outlier")
return(.Object)
}
)
setGeneric(name = "FindOutliers",
def = function(theObject, table, column_index, row_header, row_table_legend)
{
standardGeneric("FindOutliers")
}
)
setMethod(f = "FindOutliers",
signature = "Outlier",
definition = function(theObject, table, column_index, row_header, row_table_legend)
{
outliers_row_ind <- c()
only_digits <- c()
outliers <- c()
c <- table[[column_index]]
for (i in 1:length(c))
{
if (is.na(c[i]) == TRUE)
{
outliers_row_ind <- i + row_header + row_table_legend
missingValue@indices <<- append(missingValue@indices, values = paste(outliers_row_ind, column_index, sep = "."))
PrintReport(missingValue, file@path_report, outliers_row_ind, column_index)
cat("Missing value coordinates are ", paste(i, column_index, sep = "."), "\n")
next
}
if (grepl("\\d", c[i]) == TRUE)
{
only_digits <- append(only_digits, c[i])
next
}
}
only_digits <- gsub(',', '.', only_digits)
outliers <- boxplot.stats(as.numeric(only_digits))$out
if (!is.null(outliers))
{
#xlsx.createBook(table, sheet_out_name, file_out)
outliers_row_ind <- which(c %in% outliers, arr.ind = T, useNames = F)
outliers_row_ind <- outliers_row_ind + row_header + row_table_legend
outlier@indices <<- append(outlier@indices, values = outer(outliers_row_ind, column_index, paste, sep = "."))
lapply(outliers_row_ind, function(i) PrintReport(theObject, file@path_report, i, column_index))
cat("Outlier coordinates are ", paste(outliers_row_ind, column_index, sep = "."), "\n")
}
}
)
#install.packages("xlsx")
require(xlsx)
source("D:/Diploma/r_project/File.R")
file <- new("File")
file <- Open(file)
# globalMissing <- character()
# globalMisprint <- character()
# globalOutlier <- character()
# globalUnsolvedMisprint <- character()
source("D:/Diploma/r_project/Error.R")
source("D:/Diploma/r_project/MissingValue.R")
missingValue <- new("MissingValue")
source("D:/Diploma/r_project/Misprint.R")
misprint <- new("Misprint")
source("D:/Diploma/r_project/UnsolvedMisprint.R")
unsolvedMisprint <- new("UnsolvedMisprint")
source("D:/Diploma/r_project/Outlier.R")
outlier <- new("Outlier")
source("D:/Diploma/r_project/Column.R")
source("D:/Diploma/r_project/Sex.R")
sex <- new("Sex")
FindErrors(sex)
source("D:/Diploma/r_project/Age.R")
age <- new("Age")
FindErrors(age)
source("D:/Diploma/r_project/Weight.R")
weight <- new("Weight")
FindErrors(weight)
source("D:/Diploma/r_project/Diabetes.R")
diabetes <- new("Diabetes")
FindErrors(diabetes)
source("D:/Diploma/r_project/Euroscore.R")
euroscore <- new("Euroscore")
FindErrors(euroscore)
source("D:/Diploma/r_project/StsScore.R")
stsScore <- new("StsScore")
FindErrors(stsScore)
source("D:/Diploma/r_project/PeakPressureGradient.R")
peakPressureGradient <- new("PeakPressureGradient")
FindErrors(peakPressureGradient)
source("D:/Diploma/r_project/AveragePressureGradient.R")
averagePressureGradient <- new("AveragePressureGradient")
FindErrors(averagePressureGradient)
source("D:/Diploma/r_project/AorticValveStenosis.R")
aorticValveStenosis <- new("AorticValveStenosis")
FindErrors(aorticValveStenosis)
#other columns
file <- CreateExcelWB(file)
#missingValue@indices <- globalMissing
SetColor(missingValue, file)
#misprint@indices <- globalMisprint
SetColor(misprint, file)
#unsolvedMisprint@indices <- globalUnsolvedMisprint
SetColor(unsolvedMisprint, file)
#outlier@indices <- globalOutlier
SetColor(outlier, file)
file <- SaveExcelWB(file)
ann
grepl("(\\d)+", ann)
lili <- "1, 3"
grepl("(\\d)+", lili)
grepl("(\\d)+(([,])(\\d)+)?", lili)
grepl("(\\d)+(([,])(\\d+))?", lili)
lili
grepl("(\\d)+(([,])(\\d)+)?", ann)
