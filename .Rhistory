source("Misprint.R")
misprint <- new("Misprint")
rm(list - ls())
rm(list = ls())
require(xlsx)
File <- setClass("File",
slots = c(path_in = "character",
table_in = "data.frame",
path_out = "character",
path_report = "file",
table_out = "data.frame",
sheet_name = "character",
wb = "jobjRef",
sheet = "jobjRef",
row_header = "numeric",
row_table_legend = "numeric"),
prototype = list(row_header = 1,
row_table_legend = 1),
contains = "file"
)
setGeneric(name = "Open",
def = function(theObject)
{
standardGeneric("Open")
}
)
setMethod(f = "Open",
signature = "File",
definition = function(theObject)
{
#theObject@path_in <- "D:/Diploma/r_project/data_CABG_PCI_2.csv"
theObject@path_in <- "D:/Diploma/r_project/data_GABR_PCI ред..csv"
theObject@table_in <- read.csv2(theObject@path_in,
na.strings = c("", "NA"),
sep = ";",
dec = ",",
stringsAsFactors = FALSE,
check.names = FALSE)
theObject@path_out <- "D:/Diploma/r_project/data_CABG_PCI_2_coloring.xlsx"
theObject@table_out <- theObject@table_in
theObject@sheet_name <- "data_CABG_PCI_2"
file_report_name <- paste("D:/Diploma/r_project/", "Report_", format(Sys.time(), "%Y_%m_%d"), ".txt", sep = "")
theObject@path_report <- file(description = file_report_name, open ="w")
return(theObject)
}
)
setGeneric(name = "CreateExcelWB",
def = function(theObject)
{
standardGeneric("CreateExcelWB")
}
)
setMethod(f = "CreateExcelWB",
signature = "File",
definition = function(theObject)
{
theObject@wb <- createWorkbook(type = "xlsx")
theObject@sheet <- createSheet(theObject@wb, theObject@sheet_name)
createRow(theObject@sheet, rowIndex = 1)
TABLE_COLNAMES_STYLE <- CellStyle(theObject@wb) +
Font(theObject@wb, isBold = TRUE) +
Alignment(wrapText = TRUE, horizontal = "ALIGN_CENTER") +
Border(position = c("BOTTOM", "LEFT", "TOP", "RIGHT"))
addDataFrame(theObject@table_out,
theObject@sheet,
row.names = FALSE,
startRow = 2,
startColumn = 1,
colnamesStyle = TABLE_COLNAMES_STYLE)
return(theObject)
}
)
setGeneric(name = "SaveExcelWB",
def = function(theObject)
{
standardGeneric("SaveExcelWB")
}
)
setMethod(f = "SaveExcelWB",
signature = "File",
definition = function(theObject)
{
autoSizeColumn(theObject@sheet, colIndex = c(1:ncol(theObject@table_out)))
#createFreezePane(theObject@sheet, rowSplit = 2, colSplit = 2, startRow = 1, startColumn = 1)
saveWorkbook(theObject@wb, theObject@path_out )
print("New workbook was created")
close(theObject@path_report)
return(theObject)
}
)
file <- new("File")
Open(file)
source("File.R")
File <- setClass("File",
contains = "file",
slots = c(path_in = "character",
table_in = "data.frame",
path_out = "character",
path_report = "file",
table_out = "data.frame",
sheet_name = "character",
wb = "jobjRef",
sheet = "jobjRef",
row_header = "numeric",
row_table_legend = "numeric"),
prototype = list(row_header = 1,
row_table_legend = 1)
)
setGeneric(name = "Open",
def = function(theObject)
{
standardGeneric("Open")
}
)
setMethod(f = "Open",
signature = "File",
definition = function(theObject)
{
#theObject@path_in <- "D:/Diploma/r_project/data_CABG_PCI_2.csv"
theObject@path_in <- "D:/Diploma/r_project/data_GABR_PCI ред..csv"
theObject@table_in <- read.csv2(theObject@path_in,
na.strings = c("", "NA"),
sep = ";",
dec = ",",
stringsAsFactors = FALSE,
check.names = FALSE)
theObject@path_out <- "D:/Diploma/r_project/data_CABG_PCI_2_coloring.xlsx"
theObject@table_out <- theObject@table_in
theObject@sheet_name <- "data_CABG_PCI_2"
file_report_name <- paste("D:/Diploma/r_project/", "Report_", format(Sys.time(), "%Y_%m_%d"), ".txt", sep = "")
theObject@path_report <- file(description = file_report_name, open ="w")
return(theObject)
}
)
setGeneric(name = "CreateExcelWB",
def = function(theObject)
{
standardGeneric("CreateExcelWB")
}
)
setMethod(f = "CreateExcelWB",
signature = "File",
definition = function(theObject)
{
theObject@wb <- createWorkbook(type = "xlsx")
theObject@sheet <- createSheet(theObject@wb, theObject@sheet_name)
createRow(theObject@sheet, rowIndex = 1)
TABLE_COLNAMES_STYLE <- CellStyle(theObject@wb) +
Font(theObject@wb, isBold = TRUE) +
Alignment(wrapText = TRUE, horizontal = "ALIGN_CENTER") +
Border(position = c("BOTTOM", "LEFT", "TOP", "RIGHT"))
addDataFrame(theObject@table_out,
theObject@sheet,
row.names = FALSE,
startRow = 2,
startColumn = 1,
colnamesStyle = TABLE_COLNAMES_STYLE)
return(theObject)
}
)
setGeneric(name = "SaveExcelWB",
def = function(theObject)
{
standardGeneric("SaveExcelWB")
}
)
setMethod(f = "SaveExcelWB",
signature = "File",
definition = function(theObject)
{
autoSizeColumn(theObject@sheet, colIndex = c(1:ncol(theObject@table_out)))
#createFreezePane(theObject@sheet, rowSplit = 2, colSplit = 2, startRow = 1, startColumn = 1)
saveWorkbook(theObject@wb, theObject@path_out )
print("New workbook was created")
close(theObject@path_report)
return(theObject)
}
)
str(file@path_report)
file@path_report
File <- setClass("File",
contains = "file",
slots = c(path_in = "character",
table_in = "data.frame",
path_out = "character",
path_report = "file",
table_out = "data.frame",
sheet_name = "character",
wb = "jobjRef",
sheet = "jobjRef",
row_header = "numeric",
row_table_legend = "numeric"),
prototype = list(row_header = 1,
row_table_legend = 1)
)
setGeneric(name = "Open",
def = function(theObject)
{
standardGeneric("Open")
}
)
setMethod(f = "Open",
signature = "File",
definition = function(theObject)
{
#theObject@path_in <- "D:/Diploma/r_project/data_CABG_PCI_2.csv"
theObject@path_in <- "D:/Diploma/r_project/data_GABR_PCI ред..csv"
theObject@table_in <- read.csv2(theObject@path_in,
na.strings = c("", "NA"),
sep = ";",
dec = ",",
stringsAsFactors = FALSE,
check.names = FALSE)
theObject@path_out <- "D:/Diploma/r_project/data_CABG_PCI_2_coloring.xlsx"
theObject@table_out <- theObject@table_in
theObject@sheet_name <- "data_CABG_PCI_2"
file_report_name <- paste("D:/Diploma/r_project/", "Report_", format(Sys.time(), "%Y_%m_%d"), ".txt", sep = "")
theObject@path_report <- file(description = file_report_name, open ="w")
return(theObject)
}
)
setGeneric(name = "CreateExcelWB",
def = function(theObject)
{
standardGeneric("CreateExcelWB")
}
)
setMethod(f = "CreateExcelWB",
signature = "File",
definition = function(theObject)
{
theObject@wb <- createWorkbook(type = "xlsx")
theObject@sheet <- createSheet(theObject@wb, theObject@sheet_name)
createRow(theObject@sheet, rowIndex = 1)
TABLE_COLNAMES_STYLE <- CellStyle(theObject@wb) +
Font(theObject@wb, isBold = TRUE) +
Alignment(wrapText = TRUE, horizontal = "ALIGN_CENTER") +
Border(position = c("BOTTOM", "LEFT", "TOP", "RIGHT"))
addDataFrame(theObject@table_out,
theObject@sheet,
row.names = FALSE,
startRow = 2,
startColumn = 1,
colnamesStyle = TABLE_COLNAMES_STYLE)
return(theObject)
}
)
setGeneric(name = "SaveExcelWB",
def = function(theObject)
{
standardGeneric("SaveExcelWB")
}
)
setMethod(f = "SaveExcelWB",
signature = "File",
definition = function(theObject)
{
autoSizeColumn(theObject@sheet, colIndex = c(1:ncol(theObject@table_out)))
#createFreezePane(theObject@sheet, rowSplit = 2, colSplit = 2, startRow = 1, startColumn = 1)
saveWorkbook(theObject@wb, theObject@path_out )
print("New workbook was created")
close(theObject@path_report)
return(theObject)
}
)
file <- new("File")
file <- Open(file)
file@path_report
str(file@path_report)
isS4(file@path_report)
isXS3Class(file@path_report)
isS4(file)
isS4(file@table_in)
a <- file(description = "a.txt", open = "w")
isS4(a)
class(a)
is.object(a)
source("File.R")
rm(list = ls())
source("File.R")
file <- new("File")
file <- Open(file)
source("Error.R")
source("MissingValue.R")
source("Misprint.R")
source("UnsolvedMisprint.R")
source("Outlier.R")
source("Column.R")
source("Sex.R")
source("Age.R")
source("Weight.R")
source("Diabetes.R")
missingValue <- new("MissingValue")
misprint <- new("Misprint")
unsolvedMisprint <- new("UnsolvedMisprint")
outlier <- new("Outlier")
sex <- new("Sex")
FindErrors(sex)
age <- new("Age")
FindErrors(age)
weight <- new("Weight")
FindErrors(weight)
diabetes <- new("Diabetes")
FindErrors(diabetes)
#other columns
file <- CreateExcelWB(file)
#missingValue@indices <- globalMissing
SetColor(missingValue, file)
#misprint@indices <- globalMisprint
SetColor(misprint, file)
#unsolvedMisprint@indices <- globalUnsolvedMisprint
SetColor(unsolvedMisprint, file)
#outlier@indices <- globalOutlier
SetColor(outlier, file)
file <- SaveExcelWB(file)
file <- new("File")
file <- Open(file)
missingValue <- new("MissingValue")
misprint <- new("Misprint")
unsolvedMisprint <- new("UnsolvedMisprint")
outlier <- new("Outlier")
sex <- new("Sex")
FindErrors(sex)
source("Sex.R")
sex <- new("Sex")
FindErrors(sex)
source("Age.R")
age <- new("Age")
FindErrors(age)
weight <- new("Weight")
FindErrors(weight)
source("Weight.R")
weight <- new("Weight")
FindErrors(weight)
source("Diabetes.R")
diabetes <- new("Diabetes")
FindErrors(diabetes)
file <- CreateExcelWB(file)
SetColor(missingValue, file)
SetColor(misprint, file)
SetColor(unsolvedMisprint, file)
SetColor(outlier, file)
file <- SaveExcelWB(file)
require(xlsx)
source("File.R")
source("Error.R")
source("MissingValue.R")
source("Misprint.R")
source("UnsolvedMisprint.R")
source("Outlier.R")
source("Column.R")
source("Sex.R")
source("Age.R")
source("Weight.R")
source("Diabetes.R")
file <- new("File")
file <- Open(file)
missingValue <- new("MissingValue")
misprint <- new("Misprint")
unsolvedMisprint <- new("UnsolvedMisprint")
outlier <- new("Outlier")
sex <- new("Sex")
FindErrors(sex)
source("Sex.R")
sex <- new("Sex")
FindErrors(sex)
source("Age.R")
age <- new("Age")
FindErrors(age)
source("Weight.R")
weight <- new("Weight")
FindErrors(weight)
source("Diabetes.R")
diabetes <- new("Diabetes")
FindErrors(diabetes)
#other columns
file <- CreateExcelWB(file)
SetColor(missingValue, file)
#misprint@indices <- globalMisprint
SetColor(misprint, file)
#unsolvedMisprint@indices <- globalUnsolvedMisprint
SetColor(unsolvedMisprint, file)
#outlier@indices <- globalOutlier
SetColor(outlier, file)
file <- SaveExcelWB(file)
rm(list = ls())
#install.packages("xlsx")
require(xlsx)
source("File.R")
source("Error.R")
source("MissingValue.R")
source("Misprint.R")
source("UnsolvedMisprint.R")
source("Outlier.R")
source("Column.R")
source("Sex.R")
source("Age.R")
source("Weight.R")
source("Diabetes.R")
file <- new("File")
file <- Open(file)
globalMissing <- character()
globalMisprint <- character()
globalOutlier <- character()
globalUnsolvedMisprint <- character()
missingValue <- new("MissingValue")
misprint <- new("Misprint")
unsolvedMisprint <- new("UnsolvedMisprint")
outlier <- new("Outlier")
sex <- new("Sex")
FindErrors(sex)
age <- new("Age")
FindErrors(age)
weight <- new("Weight")
FindErrors(weight)
diabetes <- new("Diabetes")
FindErrors(diabetes)
#other columns
file <- CreateExcelWB(file)
#missingValue@indices <- globalMissing
SetColor(missingValue, file)
#misprint@indices <- globalMisprint
SetColor(misprint, file)
#unsolvedMisprint@indices <- globalUnsolvedMisprint
SetColor(unsolvedMisprint, file)
#outlier@indices <- globalOutlier
SetColor(outlier, file)
file <- SaveExcelWB(file)
rm(list = ls())
require(xlsx)
source("File.R")
file <- new("File")
file <- Open(file)
source("Error.R")
globalMissing <- character()
globalMisprint <- character()
globalOutlier <- character()
globalUnsolvedMisprint <- character()
source("Column.R")
source("MissingValue.R")
missingValue <- new("MissingValue")
source("Misprint.R")
misprint <- new("Misprint")
source("UnsolvedMisprint.R")
unsolvedMisprint <- new("UnsolvedMisprint")
source("Outlier.R")
outlier <- new("Outlier")
source("Sex.R")
sex <- new("Sex")
FindErrors(sex)
source("Age.R")
age <- new("Age")
FindErrors(age)
source("Weight.R")
weight <- new("Weight")
FindErrors(weight)
source("Diabetes.R")
diabetes <- new("Diabetes")
FindErrors(diabetes)
#other columns
file <- CreateExcelWB(file)
#missingValue@indices <- globalMissing
SetColor(missingValue, file)
#misprint@indices <- globalMisprint
SetColor(misprint, file)
#unsolvedMisprint@indices <- globalUnsolvedMisprint
SetColor(unsolvedMisprint, file)
#outlier@indices <- globalOutlier
SetColor(outlier, file)
file <- SaveExcelWB(file)
#install.packages("xlsx")
require(xlsx)
source("File.R")
file <- new("File")
file <- Open(file)
source("Error.R")
globalMissing <- character()
globalMisprint <- character()
globalOutlier <- character()
globalUnsolvedMisprint <- character()
source("Column.R")
source("MissingValue.R")
missingValue <- new("MissingValue")
source("Misprint.R")
misprint <- new("Misprint")
source("UnsolvedMisprint.R")
unsolvedMisprint <- new("UnsolvedMisprint")
source("Outlier.R")
outlier <- new("Outlier")
source("Sex.R")
sex <- new("Sex")
FindErrors(sex)
source("Age.R")
age <- new("Age")
FindErrors(age)
source("Weight.R")
weight <- new("Weight")
FindErrors(weight)
source("Diabetes.R")
diabetes <- new("Diabetes")
FindErrors(diabetes)
#other columns
file <- CreateExcelWB(file)
#missingValue@indices <- globalMissing
SetColor(missingValue, file)
#misprint@indices <- globalMisprint
SetColor(misprint, file)
#unsolvedMisprint@indices <- globalUnsolvedMisprint
SetColor(unsolvedMisprint, file)
#outlier@indices <- globalOutlier
SetColor(outlier, file)
file <- SaveExcelWB(file)
